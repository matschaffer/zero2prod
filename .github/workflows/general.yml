name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: postgres://postgres:password@localhost:5432/newsletter

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: newsletter
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install beta toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: beta
          override: true

      - name: Cache sqlx-cli
        uses: actions/cache@v2
        id: cache-sqlx
        with:
          path: |
            ~/.cargo/bin/sqlx
            ~/.cargo/bin/cargo-sqlx
          key: ${{ runner.os }}-sqlx-${{ hashFiles('.github/install_sqlx_cli.sh') }}

      - name: Install sqlx-cli
        if: steps.cache-sqlx.outputs.cache-hit == false
        run: .github/install_sqlx_cli.sh

      - name: Migrate database
        run: |
          sqlx migrate run

      - name: Check sqlx-data.json is up-to-date
        run: |
          cargo sqlx prepare --check -- --lib

      - uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install beta toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: beta
          override: true
          components: rustfmt

      - name: Check format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: newsletter
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install beta toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: beta
          override: true
          components: clippy

      - name: Cache sqlx-cli
        uses: actions/cache@v2
        id: cache-sqlx
        with:
          path: |
            ~/.cargo/bin/sqlx
            ~/.cargo/bin/cargo-sqlx
          key: ${{ runner.os }}-sqlx-${{ hashFiles('.github/install_sqlx_cli.sh') }}

      - name: Install sqlx-cli
        if: steps.cache-sqlx.outputs.cache-hit == false
        run: .github/install_sqlx_cli.sh

      - name: Migrate database
        run: |
          sqlx migrate run

      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: newsletter
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install beta toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: beta
          override: true

      - name: Cache sqlx-cli
        uses: actions/cache@v2
        id: cache-sqlx
        with:
          path: |
            ~/.cargo/bin/sqlx
            ~/.cargo/bin/cargo-sqlx
          key: ${{ runner.os }}-sqlx-${{ hashFiles('.github/install_sqlx_cli.sh') }}

      - name: Install sqlx-cli
        if: steps.cache-sqlx.outputs.cache-hit == false
        run: .github/install_sqlx_cli.sh

      - name: Migrate database
        run: |
          sqlx migrate run

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: '--ignore-tests'

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
